name: API Schema Validation

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  validate-dev-schema:
    uses: ./.github/workflows/db-schema-compare.yml
  schemathesis:
    #    needs: [ validate-dev-schema ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
          tags: tag:ci

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install schemathesis pytest

      - name: Set up environment variables
        run: |
          # Create a .env file with test configuration
          cp .env.development .env

      - name: Start FastAPI server
        run: |
          # Start the FastAPI server in the background
          python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          # Wait for the server to start
          sleep 5
        env:
          PYTHONPATH: .
          PGPASSWORD: ${{ secrets.DEV_DB_PASSWORD }}

      - name: Run Schemathesis tests
        run: |
          # Run Schemathesis against the API with comprehensive checks
          mkdir -p ./test-results
          python -m st run http://localhost:8000/v2/openapi.json \
            --checks all \
            --report \
            --junit-xml=./test-results/schemathesis-report.xml \
            --stateful=links \
            --max-response-time=1000 \
            --validate-schema \
            --show-errors-tracebacks

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: schemathesis-test-results
          path: ./test-results/
          retention-days: 7
